lambda1:
  handler: src/modules/hello/handler.lambda1
#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
  events:
    # - schedule:
    #     rate: rate(1 minutes)
    #     enabled: true
        # input:            
    - http:
        path: hello1
        method: get
    # multiple s3 events, put it in array
    - s3: # event when any object is created by any api
        bucket: ${self:custom.exampleBucketName}
        event: s3:ObjectCreated:*
        rules:
          - prefix: uploads/
          - suffix: .jpg
        existing: true      # doing this, will not create any new s3 bucket but it will create one permission and lambda function for the same s3 bucket events
    - s3: # event when any object is delete
        bucket: ${self:custom.exampleBucketName}
        event: s3:ObjectRemoved:*
        rules:
          - prefix: thumbnails/
          # - suffix: .png
          - suffix: .jpg
        existing: true


# lambda 3 function 
lambda3:
  handler: src/modules/hello/handler.lambda3
  events:
    # - schedule:
    #     rate: rate(1 minutes)
    #     enabled: true
        # input:            
    - http:
        path: hello3
        method: get
    #- schedule: rate(1 minutes)  # cannot schedule less than 1 minutes
#      - websocket: $connect
#      - s3: ${env:BUCKET}
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill: amzn1.ask.skill.xx-xx-xx-xx
#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp
#      - alb:
#          listenerArn: arn:aws:elasticloadbalancing:us-east-1:XXXXXX:listener/app/my-load-balancer/50dc6c495c0c9188/
#          priority: 1
#          conditions:
#            host: example.com
#            path: /hello

#    Define function environment variables here
#    environment:
#      variable2: value2